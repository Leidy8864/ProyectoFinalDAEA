@model List<WEB.Models.CustomBillModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="col-md-12">
    <h1 class="text-center">Mantenimiento de Ordenes</h1>
    <div class="row" style="margin-top:2%">
        <div class="col-md-10">
            <div class="form-group col-md-4">
                <input class="form-control" type="text" id="myInput" placeholder="Nombre o apellidos" required />
            </div>
            <div class="form-group">
                <button class="btn btn-primary" role="button" id="btnSearch" type="button">BUSCAR</button>
            </div>
        </div>
        <div class="col-md-2">
            <input class="btn btn-info" type="button" value="Nuevo estudiante" data-toggle="modal" data-target="#myModal" />
        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Nueva Orden</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <input id="CustomerId" type="hidden" />
                        <p class="text-center">CLIENTE</p>
                        <div class="form-group">
                            <label for="CustomerPhone">Customer Name</label>
                            <input type="text" class="form-control" id="CustomerName" placeholder="Customer Name" required>
                        </div>
                        <div class="form-group">
                            <label for="CustomerPhone">Customer LastName</label>
                            <input type="text" class="form-control" id="CustomerLastName" placeholder="Customer LastName" required>
                        </div>
                        <div class="form-group">
                            <label for="CustomerPhone">Customer Phone</label>
                            <input type="text" class="form-control" id="CustomerPhone" placeholder="Customer Phone" required>
                        </div>
                        <div class="form-group">
                            <label for="CustomerPhone">Customer Address</label>
                            <input type="text" class="form-control" id="CustomerAddress" placeholder="Customer Address" required>
                        </div>
                        <p class="text-center">Orden</p>
                        <div class="form-group">
                            <label for="BillCode">Bill Code</label>
                            <input type="text" class="form-control" id="BillCode" placeholder="BillCode" required disabled>
                        </div>
                        <div class="form-group">
                            <label for="BillIGV">Bill IGV</label>
                            <input type="text" class="form-control" id="BillIGV" placeholder="BillIGV" required value="18">
                        </div>
                        <div class="form-group">
                            <label for="SalesManID">SalesManID</label>
                            <input type="text" class="form-control" id="SalesManID" placeholder="SalesManID" required>
                        </div>

                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="btnSave">Save</button>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <table id="tblCustomer" class="table table-bordered table-striped table-responsive table-hover">
        <thead>
            <tr>
                <th align="left" class="productth">BillID</th>
                <th align="left" class="productth">Phone</th>
                <th align="left" class="productth">Customer</th>
                <th align="left" class="productth">SalesMan</th>
                <th align="left" class="productth">Price</th>
                <th align="left" class="productth">Quantity</th>
                <th align="left" class="productth">IGV</th>
                <th align="left" class="productth">Subtotal</th>
                <th align="left" class="productth">SalesTax</th>
                <th align="left" class="productth">Total</th>
                <th align="left" class="productth">Actions</th>

            </tr>
        </thead>
        <tbody>
            @if (Model.Count > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td align="left" class="producttd">@item.BillID</td>
                        <td align="left" class="producttd">@item.Code</td>
                        <td align="left" class="producttd">@item.Customer</td>
                        <td align="left" class="producttd">@item.SalesMan</td>
                        <td align="left" class="producttd">@item.Price</td>
                        <td align="left" class="producttd">@item.Quantity</td>
                        <td align="left" class="producttd">@item.IGV</td>
                        <td align="left" class="producttd">@item.Subtotal</td>
                        <td align="left" class="producttd">@item.SalesTax</td>
                        <td align="left" class="producttd">@item.Total</td>

                        <td>
                            <button data-id="@item.BillID" class="btn btn-info" id="btnEdit"><i class="glyphicon glyphicon-pencil"></i></button>
                            <button data-id="@item.BillID" class="btn btn-danger" id="btnDelete"><i class="glyphicon glyphicon-trash"></i></button>
                        </td>

                    </tr>
                }
            }
            else
            {

                <tr><td colspan="6" class="text-center">No se encontraron registros.</td></tr>
            }
        </tbody>
    </table>
</div>

@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>

    <script type="text/javascript">
        $(function () {
            //LoadData();

            //Generate Bill Code
            var date = new Date();
            const iYear = date.getFullYear();
            const iMonth = date.getMonth();
            const iDay = date.getDay();
            const rowCount = $('#tblCustomer tr').length;
            const factCode = `FACT-${iYear}${iMonth}${iDay}-000${rowCount}`;
            $('#BillCode').val(factCode);
            //End

            //GET PRODUCTS


            //END

            $("#btnSave").click(function () {
                console.log("That was clicked");
                var Customer = {};
                Customer.CustomerPhone = $("#CustomerPhone").val();
                Customer.CustomerName = $("#CustomerName").val();
                Customer.CustomerLastName = $("#CustomerLastName").val();
                Customer.CustomerAddress = $("#CustomerAddress").val();

                CustomerID = $('#CustomerId').val();

                if (CustomerID == '') {
                    url = '@Url.Action("createCustomer")';
                    data = '{ Customer: ' + JSON.stringify(Customer) + '}'
                    InsertOrUpdate(url, data);

                } else {
                    Swal.fire({
                        title: '¿Estás seguro?',
                        text: "Se actualizará la información de este estudiante",
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Aceptar',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.value) {
                            url = '@Url.Action("updateCustomer")';
                            Customer.CustomerID = CustomerID;
                            data = '{ Customer: ' + JSON.stringify(Customer)+ '}';
                            InsertOrUpdate(url, data);
                               Swal.fire(
                               'Actualizado',
                               'La información del estudiante ha sido actualizada correctamente',
                               'success'
                               );
                        }
                    });

                }
                return false;
            });

            $("#btnSearch").click(function (e) {
                e.preventDefault();
                const query = $("#myInput").val();

                if (query) {
                    $("#tblCustomer tbody tr").remove();
                    console.log("QUERY", query);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("searchCustomers")',
                        dataType: "json",
                        data: { "query": query },
                        success: function (data) {
                            console.log("Data recived", data);
                            var rows = "";
                            if (data.length > 0) {
                                printData(data);
                                rows = "<tr><td colspan='6' class='text-center'><a id='reloadButton' href='#'>Ver todos</a></td></tr>";
                            } else {
                                rows = "<tr><td colspan='6' class='text-center'>No se encontraron registros. <a id='reloadButton' href='#'>Ver todos</a></td></tr>";
                            }

                            $('#tblCustomer tbody').append(rows);

                        },
                        error: function (ex) {
                            console.log(ex);
                            alert("Message: " + r.Message);
                            alert("StackTrace: " + r.StackTrace);
                            alert("ExceptionType: " + r.ExceptionType);
                        }
                    });
                } else {
                    Swal.fire({
                    title: 'Oops...',
                    text: "Debe ingresar un nombre o apellido",
                    type: 'error'
                    })
                }
                return false;
            });

            $('#tblCustomer').on('click', '#reloadButton', function () {
                console.log("gaga");
                $("#myInput").val('');
                LoadData();
                $("#reloadButton").remove();

            })
        });
        //Insert or Update Function
        function InsertOrUpdate(url,data) {
                $.ajax({
                    type: "POST",
                    url: url,
                    data: data,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function () {
                        LoadData();
                    },
                    error: function (error) {
                        alert("Error while inserting data", error);
                    }
                });
        }
        function LoadData() {
            $("#tblCustomer tbody tr").remove();
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetBills")',
                data: {id : ''},
                dataType: "json",
                success: function (data) {
                    printData(data);
                    $("#myModal").modal('hide');
                    $("#CustomerId,#CustomerPhone,#CustomerName,#CustomerLastName,#CustomerAddress").val('');
                },
                error: function (ex) {
                    var r = jQuery.parseJSON(ex.responseText);
                    alert("Message: " + r.Message);
                    alert("StackTrace: " + r.StrackTrace);
                    alert("ExceptionType : " + r.ExceptionType);
                }
            });

            return false;
        }

        //This function print the list of Customers in table
        function printData(data) {
            var rows = ""
            if (data.length > 0) {
                $.each(data, function (i, item) {
                    rows = "<tr>"
                        + "<td class='prtducttd'>" + item.BillID + "</td>"
                        + "<td class='prtducttd'>" + item.Phone + "</td>"
                        + "<td class='prtducttd'>" + item.Customer + "</td>"
                        + "<td class='prtducttd'>" + item.SalesMan + "</td>"
                        + "<td class='prtducttd'>" + item.Price + "</td>"
                        + "<td class='prtducttd'>" + item.Quantity + "</td>"
                        + "<td class='prtducttd'>" + item.IGV + "</td>"
                        + "<td class='prtducttd'>" + item.Subtotal + "</td>"
                        + "<td class='prtducttd'>" + item.SalesTax + "</td>"
                        + "<td class='prtducttd'>" + item.Total + "</td>"
                        + '<td><button data-id="' + item.BillID + '" class="btn btn-info" id="btnEdit"><i class="glyphicon glyphicon-pencil"></i></button>'
                        + '<button data-id="' + item.BillID + '" class="btn btn-danger" id="btnDelete"><i class="glyphicon glyphicon-trash"></i></button></td>'
                        + "</tr>";
                    $('#tblCustomer tbody').append(rows);
                });

            } else {
                rows = "<tr><td colspan='6' class='text-center'>No se encontraron registros.</td></tr>";
                $('#tblCustomer tbody').append(rows);
            }
        }
        //Get information of Customer By ID

        $('#tblCustomer').on('click', '#btnEdit', function () {
            CustomerId = $(this).data('id');
            console.log("Customer ID ", CustomerId);
            $.post('@Url.Action("CustomerDetail")', { id: CustomerId }, (data) => {
                $('#CustomerId').val(data.CustomerID);
                $('#CustomerPhone').val(data.CustomerPhone);
                $('#CustomerName').val(data.CustomerName);
                $('#CustomerLastName').val(data.CustomerLastName);
                $('#CustomerAddress').val(data.CustomerAddress);
                $('#myModal').modal('show');
                $('#modalTitle').text('Editar Estudiante')
                console.log(data);
            }).fail(function (error) {
                alert("Error updating Customer");
                console.log("ERROR UPDATING Customer", error);
            });
        });

        //Delete Customer
        $('#tblCustomer').on('click', '#btnDelete', function () {
            Swal.fire({
                title: '¿Estás seguro?',
                text: "El estudiante será eliminado, no podrás revertir esta acción",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Aceptar',
                cancelButtonText: 'Cancelar'

            }).then((result) => {
               if (result.value) {
                    CustomerId = $(this).data('id');
                    console.log("Customer ID ", CustomerId);
                   $.post('@Url.Action("deleteCustomer")', { id: CustomerId }, () => {
                       LoadData();
                       Swal.fire(
                           'Eliminado',
                           'El estudiante ha sido eliminado correctamente',
                           'success'
                       );
                    }).fail(function () {
                        alert("Error deleting Customer");
                    });
               }
            });
        });
    </script>
}